<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>非黑即白</title>
      <link href="/2024/07/17/%E9%9D%9E%E9%BB%91%E5%8D%B3%E7%99%BD/"/>
      <url>/2024/07/17/%E9%9D%9E%E9%BB%91%E5%8D%B3%E7%99%BD/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="20259d3e3371eab97cbcab5b20b2a6320d4d303a4581dfbc1a1366827c67ffc4"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/07/14/hello-world/"/>
      <url>/2024/07/14/hello-world/</url>
      
        <content type="html"><![CDATA[<!-- <div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style> --><hr><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>零成本搭建个人博客：Hexo + GitHub + Cloudflare 完整指南</title>
      <link href="/2024/07/11/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BAhexo%E5%8D%9A%E5%AE%A2/"/>
      <url>/2024/07/11/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BAhexo%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<!-- <div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style> --><h1 id="零成本搭建个人博客：Hexo-GitHub-Pages-Cloudflare-Pages-完整指南"><a href="#零成本搭建个人博客：Hexo-GitHub-Pages-Cloudflare-Pages-完整指南" class="headerlink" title="零成本搭建个人博客：Hexo + GitHub Pages + Cloudflare Pages 完整指南"></a>零成本搭建个人博客：Hexo + GitHub Pages + Cloudflare Pages 完整指南</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>本文详细介绍了如何使用Hexo框架搭建一个个人博客，并将其部署到GitHub Pages和Cloudflare Pages上。主要内容包括：</p><ul><li>环境准备：安装Node.js和Git</li><li>配置Git和GitHub：设置SSH密钥，创建GitHub仓库</li><li>初始化Hexo项目：安装Hexo，创建新博客</li><li>部署到GitHub Pages：配置部署设置，推送静态文件</li><li>部署到Cloudflare Pages：连接GitHub仓库，自动部署</li><li>基本使用方法：创建新文章，本地预览，发布更新</li></ul><p>这个教程适合那些想要快速搭建个人博客，但又不想花费太多成本的人。通过使用Hexo、GitHub和Cloudflare的免费服务，您可以轻松创建一个高效、简洁的博客网站。</p><hr><h2 id="1-环境准备"><a href="#1-环境准备" class="headerlink" title="1. 环境准备"></a>1. 环境准备</h2><ol><li><p>域名（<strong>非必须</strong>，你也可以使用免费域名，或者<code>GitHub.io</code>或<code>Pages.dev</code>分配的域名也可以）</p></li><li><p><a href="https://github.com/">GitHub</a>（<strong>必须</strong>，你需要注册一个GitHub帐号）</p></li><li><p><a href="https://www.cloudflare.com/">Cloudflare</a>（<strong>非必须</strong>，你需要注册一个Cloudflare帐号，这样你就可以将博客部署在CF的CDN里加速，但是你也可以直接使用<code>GitHub.io</code>分配的域名</p></li></ol><hr><h2 id="2-软件支持"><a href="#2-软件支持" class="headerlink" title="2. 软件支持"></a>2. 软件支持</h2><ol><li><a href="https://nodejs.org/en">Node</a>（<strong>必须</strong>）</li><li><a href="https://git-scm.com/downloads">Git</a>（<strong>必须</strong>）</li><li><a href="https://code.visualstudio.com/">VSCode</a>（<strong>非必须</strong>，这是一款轻量型的代码编辑器，可以帮助你养成一个很好的编程习惯）</li></ol><h3 id="2-1-安装Node"><a href="#2-1-安装Node" class="headerlink" title="2.1. 安装Node"></a>2.1. 安装Node</h3><ol><li><p>打开Node官网，下载和自己系统相配的Node的安装程序，否则会出现安装问题。下载地址：<a href="https://nodejs.org/en">https://nodejs.org/en</a></p></li><li><p>下载后安装，安装的目录可以使用默认目录<code>C:/Program Files/nodejs/</code></p></li><li><p>安装完成后，检查是否安装成功。在键盘按下<kbd>win</kbd> + <kbd>R</kbd>键，输入<code>CMD</code>，然后回车，打开CMD窗口，执行<code>node -v</code>命令，看到版本信息，则说明安装成功。</p></li><li><p>修改npm源。npm下载各种模块，默认是从国处服务器下载，速度较慢，建议配置成华为云镜像源。打开CMD窗口，运行如下命令:</p></li></ol><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://mirrors.huaweicloud.com/repository/npm/</span><br></pre></td></tr></table></figure><h3 id="2-2-安装Git"><a href="#2-2-安装Git" class="headerlink" title="2.2.安装Git"></a>2.2.安装Git</h3><ol><li>进入官网下载适合当前系统的 Git：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a><br><img src="https://z.yxblog.dynv6.net/file/4606846b1290950d8aeb6.jpg"></li><li>下载后傻瓜式安装Git即可，安装的目录最好使用默认目录<code>C:/Program Files/Git</code></li><li>点击电脑左下角开始即可看见<code>Git CMD</code>、<code>Git Bash</code>、<code>Git GUI</code><ul><li><code>Git CMD</code> 是windows 命令行的指令风格</li><li><code>Git Bash</code> 是linux系统的指令风格（建议使用）</li><li><code>Git GUI</code> 是图形化界面（新手学习不建议使用）</li></ul></li></ol><hr><h2 id="3-配置-Git-密钥并连接至-Github"><a href="#3-配置-Git-密钥并连接至-Github" class="headerlink" title="3. 配置 Git 密钥并连接至 Github"></a>3. 配置 Git 密钥并连接至 Github</h2><p>常用 Git 命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config -l  //查看所有配置</span><br><span class="line">git config --system --list //查看系统配置</span><br><span class="line">git config --global --list //查看用户（全局）配置</span><br></pre></td></tr></table></figure><p><img src="https://z.yxblog.dynv6.net/file/fd14aaaee1b45e72d83b9.jpg"></p><h3 id="3-1-配置用户名和邮箱"><a href="#3-1-配置用户名和邮箱" class="headerlink" title="3.1. 配置用户名和邮箱"></a>3.1. 配置用户名和邮箱</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;你的用户名&quot;</span><br><span class="line">git config --global user.email &quot;你的邮箱&quot;</span><br></pre></td></tr></table></figure><p>通过<code>git config -l</code>检查是否配置成功</p><h3 id="3-2-配置公钥连接Github"><a href="#3-2-配置公钥连接Github" class="headerlink" title="3.2. 配置公钥连接Github"></a>3.2. 配置公钥连接Github</h3><ol><li>执行以下命令生成ssh公钥，此公钥用于计算机连接Github</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的邮箱&quot;</span><br></pre></td></tr></table></figure><p>提示<code>Enter file in which to save the key</code>直接一路回车即可，新手小白不推荐设置密钥</p><p>之后打开C盘下用户文件夹下的.ssh的文件夹，会看到以下文件</p><ul><li><code>id_rsa</code> 私钥</li><li><code>id_rsa.pub</code> 公钥</li></ul><p><img src="https://z.yxblog.dynv6.net/file/eb02e7177b060d5b46f74.jpg"></p><p>用记事本打开上述图片中的公钥  <code>id_rsa.pub</code> ，复制里面的内容，然后开始在github中配置ssh密钥</p><p><img src="https://z.yxblog.dynv6.net/file/09fc533a80496c33eb05f.jpg"></p><ol start="2"><li>将 SSH KEY 配置到 GitHub</li></ol><p>进入github，点击右上角头像 选择 <code>settings</code> ，进入设置页后选择 <code>SSH and GPG keys</code> ，右上角 <code>New SSH key</code> ，名字随便起，公钥填到 <code>Key</code> 那一栏。</p><ol start="3"><li>测试连接，输入以下命令</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>第一次连接会提示 <code>Are you sure you want to continue connecting (yes/no/[fingerprint])?</code> ，输入 <code>yes</code> 即可</p><p>出现连接到账户的信息，说明已经大功告成，至此完成了环境准备工作。</p><h3 id="3-3-创建GitHub-io仓库"><a href="#3-3-创建GitHub-io仓库" class="headerlink" title="3.3. 创建GitHub.io仓库"></a>3.3. 创建GitHub.io仓库</h3><ol><li>点击github主页右上角的 <code>+</code> 按钮，选择 <code>New repository</code> ，创建一个 <code>&lt;用户名&gt;.github.io</code> 的仓库</li><li>仓库名字的格式必须为：<code>&lt;用户名&gt;.github.io</code> (注意：前缀必须为用户名，此为预览博客需要，后期可修改仓库名)</li><li>可见性必须选择 <code>Public</code> 方便第一次部署检查问题，点击 <code>Creat repository</code> 进行创建即可</li></ol><h2 id="4-初始化-Hexo-博客"><a href="#4-初始化-Hexo-博客" class="headerlink" title="4. 初始化 Hexo 博客"></a>4. 初始化 Hexo 博客</h2><ol><li>创建一个文件夹来保存博客源码（我这里选的路径为 <code>D:/Hexo-Blog</code> ），在文件夹内右键鼠标，选择 <code>Open Git Bash here</code></li></ol><p><img src="https://z.yxblog.dynv6.net/file/f43156d1ba5fc18f9761e.png"></p><ol start="2"><li>在 <code>Git BASH</code> 输入如下命令安装 Hexo</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli &amp;&amp; hexo -v</span><br></pre></td></tr></table></figure><ol start="3"><li><p>安装完后输入 <code>hexo -v</code> 验证是否安装成功</p></li><li><p>初始化 Hexo 项目并安装相关依赖</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog-demo</span><br><span class="line">cd blog-demo</span><br><span class="line">npm i</span><br></pre></td></tr></table></figure><ol start="5"><li>初始化项目后，blog-demo有如下结构：</li></ol><p><img src="https://z.yxblog.dynv6.net/file/59600e41bbf44598f9c97.png"></p><ul><li>node_modules：依赖包</li><li>scaffolds：生成文章的一些模板</li><li>source：用来存放你的文章</li><li>themes：主题</li><li>.npmignore：发布时忽略的文件（可忽略）</li><li>_config.landscape.yml：主题的配置文件</li><li>config.yml：博客的配置文件</li><li>package.json：项目名称、描述、版本、运行和开发等信息</li></ul><ol start="6"><li><p>输入 <code>hexo cl &amp;&amp; hexo s</code> 启动项目</p></li><li><p>打开浏览器，输入地址：<code>http://localhost:4000/</code> ，看到下面的效果，说明你的博客已经构建成功了</p></li></ol><p><img src="https://z.yxblog.dynv6.net/file/dac487b53c7c76e0aa0f4.jpg"></p><hr><h2 id="5-将静态博客挂载到-GitHub-Pages"><a href="#5-将静态博客挂载到-GitHub-Pages" class="headerlink" title="5.将静态博客挂载到 GitHub Pages"></a>5.将静态博客挂载到 GitHub Pages</h2><ol><li>安装 hexo-deployer-git</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><ol start="2"><li>修改 <code>_config.yml</code> 文件</li></ol><p>在blog-demo目录下的_config.yml，就是整个Hexo框架的配置文件了。可以在里面修改大部分的配置。详细可参考官方的<a href="https://hexo.io/zh-cn/docs/configuration">配置描述</a>。<br>修改最后一行的配置，将repository修改为你自己的github项目地址即可，还有分支要改为 <code>main</code> 代表主分支（注意缩进）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:zy111x/zy111x.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure><ol start="3"><li>修改好配置后，运行如下命令，将代码部署到 GitHub（Hexo三连）</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// Git BASH终端</span><br><span class="line">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy  </span><br><span class="line"></span><br><span class="line">// 或者</span><br><span class="line"></span><br><span class="line">// VSCODE终端</span><br><span class="line">hexo cl; hexo g; hexo d</span><br></pre></td></tr></table></figure><ul><li>hexo clean：删除之前生成的文件，可以用 <code>hexo cl</code> 缩写。</li><li>hexo generate：生成静态文章，可以用 <code>hexo g</code> 缩写</li><li>hexo deploy：部署文章，可以用 <code>hexo d</code> 缩写</li></ul><p>(<em><strong>注意：deploy时可能要你输入 username 和 password</strong></em>)</p><p>如果出现<strong>Deploy done</strong>，则说明部署成功了。</p><p>稍等两分钟，打开浏览器访问: <a href="https://zy111x.github.io/">https://zy111x.github.io</a>,这时候我们就可以看到博客内容了</p><hr><h2 id="6-将静态博客挂载到-Cloudflare-Pages"><a href="#6-将静态博客挂载到-Cloudflare-Pages" class="headerlink" title="6.将静态博客挂载到 Cloudflare Pages"></a>6.将静态博客挂载到 Cloudflare Pages</h2><ol><li>在 <code>Workers 和 Pages</code> 中选择 <code>Pages</code> 的 <code>连接到 Git</code></li></ol><p><img src="https://z.yxblog.dynv6.net/file/f60788dd63b3186b1b6ee.jpg"></p><ol start="2"><li><p>然后登录你Blog仓库对应的GitHub帐号</p></li><li><p>默认设置，<code>Install &amp; Authorize</code></p></li><li><p>选择博客所在的储存库，并 <code>开始设置</code></p></li><li><p>点击 <code>保存并部署</code> 后等待部署完成即可。</p></li><li><p>提示 <code>成功！您的项目已部署到以下区域：全球</code> 后，浏览器访问：<a href="https://zy111x-github-io.pages.dev/">https://zy111x-github-io.pages.dev</a> ，这时候我们就可以看到博客内容了</p></li></ol><p>这时你也就可以将你的 <code>&lt;用户名&gt;.github.io</code> 的仓库设置为 <code>Private</code> 私库了</p><ol start="7"><li>如果你有自己的域名，你可以绑定你自己的自定义域，即可</li></ol><hr><h2 id="7-How-To-Use"><a href="#7-How-To-Use" class="headerlink" title="7.How To Use"></a>7.How To Use</h2><h3 id="7-1-新建一篇博文"><a href="#7-1-新建一篇博文" class="headerlink" title="7.1 新建一篇博文"></a>7.1 新建一篇博文</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new 这是一篇新的博文</span><br></pre></td></tr></table></figure><p>然后用文本编辑器去编辑 <code>_posts/这是一篇新的博文.md</code> 里的内容即可，注意要使用Markdown格式书写。<br>详细使用方法可以查阅 <a href="https://hexo.io/zh-cn/docs/writing">https://hexo.io/zh-cn/docs/writing</a></p><h3 id="7-2-本地预览"><a href="#7-2-本地预览" class="headerlink" title="7.2 本地预览"></a>7.2 本地预览</h3><p>编辑完文章保存后可以使用如下命令，生成本地页面 <a href="http://localhost:4000/">http://localhost:4000/</a> ，进行预览</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// Git BASH终端</span><br><span class="line">hexo cl &amp;&amp; hexo s</span><br><span class="line"></span><br><span class="line">// 或者</span><br><span class="line"></span><br><span class="line">// VSCODE终端</span><br><span class="line">hexo cl; hexo s</span><br></pre></td></tr></table></figure><h3 id="7-3-推送至GitHub仓库"><a href="#7-3-推送至GitHub仓库" class="headerlink" title="7.3 推送至GitHub仓库"></a>7.3 推送至GitHub仓库</h3><p>确认无误后使用以下命令，将本地文章推送至GitHub仓库即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// Git BASH终端</span><br><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line"></span><br><span class="line">// 或者</span><br><span class="line"></span><br><span class="line">// VSCODE终端</span><br><span class="line">hexo cl; hexo g; hexo d</span><br></pre></td></tr></table></figure><h2 id="8-VS-code-终端首次执行报错"><a href="#8-VS-code-终端首次执行报错" class="headerlink" title="8.VS code 终端首次执行报错"></a>8.VS code 终端首次执行报错</h2><p>使用<strong>管理员身份</strong>打开 <strong>powershell</strong> ,输入以下命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Set-ExecutionPolicy</span> RemoteSigned</span><br></pre></td></tr></table></figure><h2 id="9-参考资料"><a href="#9-参考资料" class="headerlink" title="9.参考资料"></a>9.参考资料</h2><p><a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a><br><a href="https://www.fomal.cc/posts/e593433d.html">https://www.fomal.cc/posts/e593433d.html</a><br><a href="https://docs.anheyu.com/">https://docs.anheyu.com/</a><br><a href="https://blog.cmliussss.com/p/HexoBlogNo1/">https://blog.cmliussss.com/p/HexoBlogNo1/</a></p><h2 id="10-Thanks"><a href="#10-Thanks" class="headerlink" title="10.Thanks"></a>10.Thanks</h2><p><a href="https://github.com/hexojs/hexo">https://github.com/hexojs/hexo</a></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> Markdown </tag>
            
            <tag> 学习笔记 </tag>
            
            <tag> Pages </tag>
            
            <tag> Github </tag>
            
            <tag> 博客搭建 </tag>
            
            <tag> Hexo </tag>
            
            <tag> Git </tag>
            
            <tag> 静态网站 </tag>
            
            <tag> 个人网站 </tag>
            
            <tag> 免费托管 </tag>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>telegraph-Image：搭建你的专属开源图床</title>
      <link href="/2024/07/11/telegraph-Image/"/>
      <url>/2024/07/11/telegraph-Image/</url>
      
        <content type="html"><![CDATA[<!-- <div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style> --><h1 id="telegraph-Image：搭建你的专属开源图床"><a href="#telegraph-Image：搭建你的专属开源图床" class="headerlink" title="telegraph-Image：搭建你的专属开源图床"></a><a href="https://github.com/x-dr/telegraph-Image">telegraph-Image：搭建你的专属开源图床</a></h1><p><strong>点击标题即可打开Github源项目链接</strong></p><hr><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>图床是一个在互联网上储存图片的空间，图床的人通常都是一些在网上分享博客的人，使用图床的人通常采用Markdown的方式去编辑文字。目前有许多获得图床的途径非常多，通常分为收费的和免费的。<br>该文章讲述通过 <a href="https://github.com/x-dr/telegraph-Image">Telegraph-Image</a> 与赛博菩萨<a href="https://www.cloudflare.com/">Cloudflare</a>提供的 Pages、D1等，搭建一个专属于你自己的开源图床！</p><hr><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul><li><strong>无限图片储存数量</strong>，你可以上传不限数量的图片，<strong>but，单张图片不能超过5MB</strong></li><li><strong>无需服务器</strong>，托管于Cloudflare的网络上，当使用量不超过Cloudflare的免费额度时，完全免费</li><li><strong>无需域名</strong>，可以使用Cloudflare Pages提供的*.pages.dev的免费二级域名，同时也支持绑定自定义域名</li><li><strong>支持图片审查API</strong>，可根据需要开启，开启后不良图片将自动屏蔽，不再加载</li><li><strong>支持后台管理</strong>，日志管理，查看访问前20的Referer、IP、img,可以对上传的图片进行在线预览，添加白名单，黑名单等操作</li></ul><p>让我们开始学习如何部署叭！！！</p><hr><h2 id="部署教程"><a href="#部署教程" class="headerlink" title="部署教程"></a>部署教程</h2><ol><li>Pages部署<strong>telegraph-Image</strong>项目</li></ol><ul><li><p>打开<a href="https://www.cloudflare.com/">telegraph-Image</a>项目仓库，先给作者点击<code>Star</code>后再点击<code>Fork</code>！可以增加成功率哦！！！<strong>手动狗头🤭</strong></p></li><li><p>回到 <strong>Workers</strong> 和 <strong>Pages</strong>  &gt;  <strong>概述</strong> &gt; <strong>创建</strong> &gt; <strong>Pages</strong> &gt; <strong>连接到Git</strong> &gt; 选择<code>telegraph-Image</code>项目 &gt; <strong>保存并部署</strong>即可</p></li></ul><hr><p>2.绑定自定义域</p><ul><li><p>这里推荐优先使用已经转入CF的域名，并开启小黄云。如果你没有域名，也可以退而求其次使用<strong>CNAME方式</strong>使用免费域名接入自定义域</p></li><li><p>回到 <strong>Workers和Pages&#x2F;</strong><code>telegraph-Image</code>项目 &gt; <strong>设置</strong> &gt; <strong>函数</strong> &gt; <strong>放置</strong> &gt; <strong>制作</strong> &gt; <strong>智能</strong> &gt; <strong>保存</strong></p></li></ul><hr><p>3.创建管理后台</p><ul><li><p>3.1 回到 <strong>Workers 和 Pages</strong> &gt; <strong>D1</strong> &gt; <strong>创建数据库</strong> &gt; <strong>仪表盘</strong> &gt; <strong>数据库名称为<code>img</code></strong>(名称可取任意值，建议为img) &gt; <strong>创建</strong></p></li><li><p>3.2 进入<code>img</code>数据库 &gt; <strong>控制台</strong> &gt; <strong>粘贴以下代码</strong>后 &gt; 点击<strong>执行</strong> &gt; 等待提示<strong>此查询已成功执行</strong>。</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> tgimglog;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> tgimglog (</span><br><span class="line">    `id` <span class="type">integer</span> <span class="keyword">PRIMARY</span> KEY <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    `url` text,</span><br><span class="line">    `referer` text,</span><br><span class="line">    `ip` <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">    `<span class="type">time</span>` <span class="type">DATE</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> imginfo;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> imginfo (</span><br><span class="line">    `id` <span class="type">integer</span> <span class="keyword">PRIMARY</span> KEY <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    `url` text,</span><br><span class="line">    `referer` text,</span><br><span class="line">    `ip` <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">    `rating` text,</span><br><span class="line">    `total` <span class="type">integer</span>,</span><br><span class="line">    `<span class="type">time</span>` <span class="type">DATE</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li><p>3.3 回到 <strong>Workers 和 Pages &#x2F;</strong> <code>telegraph-Image</code>项目 &gt; <strong>设置</strong> &gt; <strong>函数</strong> &gt; <strong>D1 数据库绑定</strong> &gt; <strong>变量名<code>IMG</code></strong> &gt; <strong><code>img</code>数据库</strong> &gt; 点击<strong>保存</strong></p></li><li><p>3.4 回到 <strong>Workers 和 Pages &#x2F;</strong> <code>telegraph-Image</code>项目 &gt; <strong>设置</strong> &gt; <strong>环境变量</strong> &gt; <strong>为生产环境定义变量</strong> &gt; 变量内容如下:</p><ul><li><p>变量名<code>BASIC_USER</code>，值为你的<strong>后台管理员用户名</strong></p></li><li><p>变量名<code>BASIC_PASS</code>，值为你的<strong>后台管理员密码</strong></p></li><li><p><strong>无需审查违规内容可跳过这一步</strong></p><ul><li>打开<a href="https://moderatecontent.com/">ModerateContent</a> API申请页面，输入你的邮箱后点击<strong>SUBMIT</strong></li><li>前往你的邮箱将 <strong>ModerateContent.com Sup</strong> 邮件内的 <strong>API Key</strong> 复制出来</li><li>变量名<code>ModerateContentApiKey</code>，值为你的 <strong>API Key</strong></li></ul></li></ul></li><li><p>3.5 回到 <strong>Workers 和 Pages &#x2F;</strong><code>telegraph-Image</code>项目 &gt; <strong>部署</strong> &gt; 点击<strong>右下角省略号</strong> &gt; <strong>重试部署</strong>即可</p></li></ul><hr><h2 id="How-To-Use"><a href="#How-To-Use" class="headerlink" title="How To Use"></a>How To Use</h2><p>例如：你的 Pages自定义域 为<code>img.123456.com</code></p><ul><li><code>https://img.123456.com</code> 为 <strong>图床上传使用地址</strong></li><li><code>https://img.123456.com/admin</code>为 <strong>图床后台管理地址</strong></li><li><code>https://123456.com/list</code>为 <strong>图床访问日志</strong></li></ul><hr><h2 id="变量说明"><a href="#变量说明" class="headerlink" title="变量说明"></a>变量说明</h2><table><thead><tr><th>变量名</th><th>示例</th><th>备注</th></tr></thead><tbody><tr><td>BASIC_USER</td><td>admin</td><td>后台管理员用户名</td></tr><tr><td>BASIC_PASS</td><td>123456</td><td>后台管理员密码</td></tr><tr><td>RATINGAPI</td><td><code>https://xxx.xxx/rating</code></td><td><a href="https://github.com/x-dr/nsfwjs-api">自建的鉴黄api</a></td></tr><tr><td>ModerateContentApiKey</td><td>8ba353957d6c2bea538dca28a66a04cd</td><td>审查图像内容的API key</td></tr></tbody></table><hr><h2 id="Thanks-Giter"><a href="#Thanks-Giter" class="headerlink" title="Thanks Giter"></a>Thanks Giter</h2><ul><li><a href="https://github.com/x-dr/telegraph-Image">x-dr</a></li><li><a href="https://github.com/cf-pages/Telegraph-Image">cf-pages</a></li><li><a href="https://github.com/likebeta/telegraph-image-hosting">likebeta</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> Cloudflare </tag>
            
            <tag> Pages </tag>
            
            <tag> 图床 </tag>
            
            <tag> 自建图床 </tag>
            
            <tag> telegraph-Image </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法</title>
      <link href="/2024/07/07/Markdown-teaching/"/>
      <url>/2024/07/07/Markdown-teaching/</url>
      
        <content type="html"><![CDATA[<!-- <div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style> --><!-- Markdown 语法参考 : https://www.runoob.com/markdown/md-tutorial.html表情全部名称：https://unicode.org/emoji/charts/full-emoji-list.html --><h1 id="一、标题"><a href="#一、标题" class="headerlink" title="一、标题"></a>一、标题</h1><p>markdown的标题呢有两种格式</p><h4 id="1、使用-和-标记一级和二级标题"><a href="#1、使用-和-标记一级和二级标题" class="headerlink" title="1、使用 &#x3D; 和 - 标记一级和二级标题"></a>1、使用 &#x3D; 和 - 标记一级和二级标题</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">我展示的是一级标题  </span><br><span class="line">================</span><br><span class="line">我展示的是二级标题  </span><br><span class="line">----------------</span><br></pre></td></tr></table></figure><p>显示效果如下图所示：</p><p><img src="https://z.yxblog.dynv6.net/file/bd34c9000fc9ec240f416.png"></p><!-- **<font color=Blue>好腻害</font>** --><h4 id="2、使用-号标记标题"><a href="#2、使用-号标记标题" class="headerlink" title="2、使用 # 号标记标题"></a>2、使用 # 号标记标题</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure><p>显示效果如下图所示：</p><p><img src="https://z.yxblog.dynv6.net/file/bdde5c94e4ff1919af072.png"></p><hr><h1 id="二、段落格式"><a href="#二、段落格式" class="headerlink" title="二、段落格式"></a>二、段落格式</h1><h4 id="1、换行"><a href="#1、换行" class="headerlink" title="1、换行"></a>1、换行</h4><p>Markdown 段落没有特殊的格式，直接编写文字就好，<strong>段落的换行是使用两个以上空格加上回车</strong></p><p><img src="https://z.yxblog.dynv6.net/file/0f6ded70d2d9d34b0a1bc.png"></p><p>当然也可以在段落后面使用一个空行来表示重新开始一个段落</p><p><img src="https://z.yxblog.dynv6.net/file/9d33eee95ddfb4867608a.png"></p><h4 id="2、字体样式"><a href="#2、字体样式" class="headerlink" title="2、字体样式"></a>2、字体样式</h4><p>Markdown 可以使用以下几种字体：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">*斜体文本*</span><br><span class="line">_斜体文本_</span><br><span class="line">**粗体文本**</span><br><span class="line">__粗体文本__</span><br><span class="line">***粗斜体文本***</span><br><span class="line">___粗斜体文本___</span><br></pre></td></tr></table></figure><p>显示效果如下图所示：</p><p><img src="https://z.yxblog.dynv6.net/file/d9da22791bfa8389c2821.png"></p><h4 id="3、分隔线"><a href="#3、分隔线" class="headerlink" title="3、分隔线"></a>3、分隔线</h4><p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">***</span><br><span class="line"></span><br><span class="line">* * *</span><br><span class="line"></span><br><span class="line">*****</span><br><span class="line"></span><br><span class="line">- - -</span><br><span class="line"></span><br><span class="line">----------</span><br></pre></td></tr></table></figure><p>显示效果如下图所示：</p><p><img src="https://z.yxblog.dynv6.net/file/3e08f58a02aa6d4483538.png"></p><h4 id="4、删除线"><a href="#4、删除线" class="headerlink" title="4、删除线"></a>4、删除线</h4><p>如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线<code>~~</code>即可，实例如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">这是一段正确的文本</span><br><span class="line">~~这是一段错误的文本~~</span><br></pre></td></tr></table></figure><p>显示效果如下图所示：</p><p><img src="https://z.yxblog.dynv6.net/file/ef46e5538de273d1efc52.png"></p><h4 id="5、下划线"><a href="#5、下划线" class="headerlink" title="5、下划线"></a>5、下划线</h4><p>下划线可以通过 HTML 的<code>&lt;u&gt;</code>标签来实现：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">不带下划线的文本</span><br><span class="line">&lt;u&gt;带下划线的文本&lt;/u&gt;</span><br></pre></td></tr></table></figure><p>显示效果如下图所示：</p><p><img src="https://z.yxblog.dynv6.net/file/063badc35b8fdb2c08a0a.png"></p><h4 id="6、脚注"><a href="#6、脚注" class="headerlink" title="6、脚注"></a>6、脚注</h4><p>脚注是对文本的补充说明，Markdown 脚注的格式如<code>[^要注明的文本]</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">创建脚注格式类似这样 [^GSW]。</span><br><span class="line">[^GSW]: Golden State Warriors</span><br></pre></td></tr></table></figure><p>显示效果如下图所示：</p><p><img src="https://z.yxblog.dynv6.net/file/97683f7d369b37ce3048f.png"></p><hr><h1 id="三、列表"><a href="#三、列表" class="headerlink" title="三、列表"></a>三、列表</h1><p>Markdown 支持有序列表和无序列表。</p><p>无序列表使用星号(<code>*</code>)、加号(<code>+</code>)或是减号(<code>-</code>)作为列表标记，这些标记后面要添加一个空格，然后再填写内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">* 第一项</span><br><span class="line">* 第二项</span><br><span class="line">* 第三项</span><br><span class="line"></span><br><span class="line">+ 第一项</span><br><span class="line">+ 第二项</span><br><span class="line">+ 第三项</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- 第一项</span><br><span class="line">- 第二项</span><br><span class="line">- 第三项</span><br></pre></td></tr></table></figure><p>显示效果如下图所示：</p><p><img src="https://z.yxblog.dynv6.net/file/06fa3e1153c93edf789d9.png"></p><p>有序列表使用数字并加上<code>.</code>号来表示，如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 第一项</span><br><span class="line">2. 第二项</span><br><span class="line">3. 第三项</span><br></pre></td></tr></table></figure><p>显示效果如下图所示：</p><p><img src="https://z.yxblog.dynv6.net/file/8ed38baf3d275a25070ca.png"></p><h4 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h4><p>列表嵌套只需在子列表中的选项前面添加两个或四个空格即可：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. 第一项：</span><br><span class="line">    - 第一项嵌套的第一个元素</span><br><span class="line">    - 第一项嵌套的第二个元素</span><br><span class="line">2. 第二项：</span><br><span class="line">    - 第二项嵌套的第一个元素</span><br><span class="line">    - 第二项嵌套的第二个元素</span><br></pre></td></tr></table></figure><p>显示效果如下图所示：</p><p><img src="https://z.yxblog.dynv6.net/file/cecdfb8fb68cef07ee66a.png"></p><hr><h1 id="四、区块"><a href="#四、区块" class="headerlink" title="四、区块"></a>四、区块</h1><p>Markdown 区块引用是在段落开头使用<code>&gt;</code>符号 ，然后后面紧跟一个空格符号：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 区块引用</span><br><span class="line">&gt; Markdown</span><br><span class="line">&gt; 学无止境，要将学习贯穿一辈子</span><br></pre></td></tr></table></figure><p>显示效果如下图所示：</p><p><img src="https://z.yxblog.dynv6.net/file/0b0e7b1fb1a75588b2b51.png"></p><p>另外区块是可以嵌套的，一个<code>&gt;</code>符号是最外层，两个<code>&gt;</code>符号是第一层嵌套，以此类推：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 最外层</span><br><span class="line">&gt; &gt; 第一层嵌套</span><br><span class="line">&gt; &gt; &gt; 第二层嵌套</span><br></pre></td></tr></table></figure><p>显示效果如下图所示：</p><p><img src="https://z.yxblog.dynv6.net/file/8cc98a3c783ca13f0c8f7.png"></p><h4 id="区块中使用列表"><a href="#区块中使用列表" class="headerlink" title="区块中使用列表"></a>区块中使用列表</h4><p>区块中使用列表实例如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; 区块中使用列表</span><br><span class="line">&gt; 1. 第一项</span><br><span class="line">&gt; 2. 第二项</span><br><span class="line">&gt; + 第一项</span><br><span class="line">&gt; + 第二项</span><br><span class="line">&gt; + 第三项</span><br></pre></td></tr></table></figure><p>显示效果如下图所示：    </p><p><img src="https://z.yxblog.dynv6.net/file/ced525510561dc3c71e74.png"></p><h4 id="列表中使用区块"><a href="#列表中使用区块" class="headerlink" title="列表中使用区块"></a>列表中使用区块</h4><p>如果要在列表项目内放进区块，那么就需要在<code>&gt;</code>前添加四个空格的缩进。</p><p>列表中使用区块实例如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* 第一项</span><br><span class="line">    &gt; Mardown</span><br><span class="line">    &gt; 学的不仅是技术更是梦想</span><br><span class="line">* 第二项</span><br></pre></td></tr></table></figure><p>显示效果如下图所示：</p><p><img src="https://z.yxblog.dynv6.net/file/506e61ab0e85d931c0f94.png"></p><hr><h1 id="五、代码"><a href="#五、代码" class="headerlink" title="五、代码"></a>五、代码</h1><p>如果是段落上的一个函数或片段的代码可以用反引号把它包起来（<code>`</code> ），例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`print()`具有输出的功能</span><br></pre></td></tr></table></figure><p>显示效果如下图所示：</p><p><img src="https://z.yxblog.dynv6.net/file/784b18823885e23de96ff.png"></p><h4 id="代码区块"><a href="#代码区块" class="headerlink" title="代码区块"></a>代码区块</h4><p>代码区块使用 4 个空格或者一个制表符（Tab 键）。</p><p>实例如下：</p><pre><code>if a == 1:print(&quot;a is 1&quot;)else:print(&quot;a is not 1&quot;)</code></pre><p>显示效果如下图所示：</p><p><img src="https://z.yxblog.dynv6.net/file/a9d241eb5efc04f617492.png"></p><p>你也可以用<code>```</code>包裹一段代码，并指定一种语言（也可以不指定）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> a == <span class="number">1</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;a is 1&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;a is not 1&quot;</span>)</span><br></pre></td></tr></table></figure><p>显示效果如下图所示：</p><p><img src="https://z.yxblog.dynv6.net/file/7d181b889944205ad7a2c.png"></p><hr><h1 id="六、链接"><a href="#六、链接" class="headerlink" title="六、链接"></a>六、链接</h1><p>链接使用方法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[链接名称](链接地址)</span><br><span class="line"></span><br><span class="line">或</span><br><span class="line"></span><br><span class="line">&lt;链接地址&gt;</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[我的博客](https://zy111x.github.io/)</span><br><span class="line"></span><br><span class="line">&lt;https://zy111x.github.io/&gt;</span><br></pre></td></tr></table></figure><p>显示效果如下图所示：</p><p><img src="https://z.yxblog.dynv6.net/file/a7078b932bc4d22a77492.png"></p><h4 id="高级链接"><a href="#高级链接" class="headerlink" title="高级链接"></a>高级链接</h4><p>我们可以通过变量来设置一个链接，变量赋值在文档末尾进行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">这个链接用 1 作为网址变量 [Google][1]</span><br><span class="line">这个链接用 blog 作为网址变量 [Blog][blog]</span><br><span class="line">然后在文档的结尾为变量赋值（网址）</span><br><span class="line"></span><br><span class="line">  [1]: http://www.google.com/</span><br><span class="line">  [blog]: http://zy111x.github.io/</span><br></pre></td></tr></table></figure><p>显示效果如下图所示：</p><p><img src="https://z.yxblog.dynv6.net/file/267970362dc1f712d3d0a.png"></p><hr><h1 id="七、图片"><a href="#七、图片" class="headerlink" title="七、图片"></a>七、图片</h1><p>图片的语法格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">![alt 属性文本](图片地址)</span><br><span class="line">![alt 属性文本](图片地址 &quot;可选标题&quot;)</span><br></pre></td></tr></table></figure><ul><li>开头一个感叹号 !</li><li>接着一个方括号，里面放上图片的替代文字接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并</li><li>加上选择性的 ‘title’ 属性的文字。</li></ul><p>当然，你也可以像网址那样对图片网址使用变量:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">这个链接用 1 作为网址变量 [Blog][1].</span><br><span class="line">然后在文档的结尾为变量赋值（网址）</span><br><span class="line"></span><br><span class="line">[1]: https://z.yxblog.dynv6.net/file/0ce4c1f1bcce9c91a0187.jpg</span><br></pre></td></tr></table></figure><p>Markdown 还没有办法指定图片的高度与宽度，如果你需要的话，你可以使用普通的<code>&lt;img&gt;</code>标签:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;https://z.yxblog.dynv6.net/file/0ce4c1f1bcce9c91a0187.jpg&quot; width=&quot;50%&quot;&gt;</span><br></pre></td></tr></table></figure><img src="https://z.yxblog.dynv6.net/file/0ce4c1f1bcce9c91a0187.jpg" width="50%"><hr><h1 id="八、表格"><a href="#八、表格" class="headerlink" title="八、表格"></a>八、表格</h1><p>Markdown 制作表格使用<code>|</code>来分隔不同的单元格，使用<code>-</code>来分隔表头和其他行。</p><p>语法格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">|  表头   | 表头  |</span><br><span class="line">|  ----  | ----  |</span><br><span class="line">| 单元格  | 单元格 |</span><br><span class="line">| 单元格  | 单元格 |</span><br></pre></td></tr></table></figure><p>显示效果如下图所示：</p><p><img src="https://z.yxblog.dynv6.net/file/449919a21d694974549b5.png"></p><p>对齐方式:</p><p><strong>我们可以设置表格的对齐方式：</strong></p><ul><li><code>-:</code> 设置内容和标题栏居右对齐。</li><li><code>:-</code> 设置内容和标题栏居左对齐。</li><li><code>:-:</code> 设置内容和标题栏居中对齐</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| 左对齐 | 右对齐 | 居中对齐 |</span><br><span class="line">| :-----| ----: | :----: |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br></pre></td></tr></table></figure><p>显示效果如下图所示：</p><p><img src="https://z.yxblog.dynv6.net/file/6ccd0ecbc4c2f4db30f8f.png"></p><hr><h1 id="九、高级技巧"><a href="#九、高级技巧" class="headerlink" title="九、高级技巧"></a>九、高级技巧</h1><h4 id="支持的-HTML-元素"><a href="#支持的-HTML-元素" class="headerlink" title="支持的 HTML 元素"></a>支持的 HTML 元素</h4><p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。<br>目前支持的 HTML 元素有：<code>&lt;kbd&gt;</code> <code>&lt;b&gt;</code> <code>&lt;i&gt;</code> <code>&lt;em&gt;</code> <code>&lt;sup&gt;</code> <code>&lt;sub&gt;</code> <code>&lt;br&gt;</code>等 ，如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用 &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Del&lt;/kbd&gt; 重启电脑</span><br></pre></td></tr></table></figure><p>显示效果如下图所示：</p><p><img src="https://z.yxblog.dynv6.net/file/0f69c3e386ba6599183c9.png"></p><h4 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h4><p>Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">**文本加粗** </span><br><span class="line">\*\* 正常显示星号 \*\*</span><br></pre></td></tr></table></figure><p>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">\   反斜线</span><br><span class="line">`   反引号</span><br><span class="line">*   星号</span><br><span class="line">_   下划线</span><br><span class="line">&#123;&#125;  花括号</span><br><span class="line">[]  方括号</span><br><span class="line">()  小括号</span><br><span class="line">#   井字号</span><br><span class="line">+   加号</span><br><span class="line">-   减号</span><br><span class="line">.   英文句点</span><br><span class="line">!   感叹号</span><br></pre></td></tr></table></figure><h4 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h4><p><strong>Markdown Preview Enhanced</strong> 使用 <a href="https://github.com/KaTeX/KaTeX">KaTeX</a> 或者 <a href="https://github.com/mathjax/MathJax">MathJax</a> 来渲染数学表达式。<br>KaTeX 拥有比 MathJax 更快的性能，但是它却少了很多 MathJax 拥有的特性。你可以查看 KaTeX supported functions&#x2F;symbols 来了解 KaTeX 支持那些符号和函数。</p><p>默认下的分隔符：</p><ul><li>$…$ 或者 \(…\) 中的数学表达式将会在行内显示。</li><li>$$…$$ 或者 \[…\] 或者 &#96;&#96;&#96;math 中的数学表达式将会在块内显示。</li></ul><p><img src="https://z.yxblog.dynv6.net/file/ee30efe420de9ebfeef4d.gif"> </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\begin&#123;Bmatrix&#125;</span><br><span class="line">   a &amp; b \\</span><br><span class="line">   c &amp; d</span><br><span class="line">\end&#123;Bmatrix&#125;</span><br><span class="line">$$</span><br><span class="line">$$</span><br><span class="line">\begin&#123;CD&#125;</span><br><span class="line">   A @&gt;a&gt;&gt; B \\</span><br><span class="line">@VbVV @AAcA \\</span><br><span class="line">   C @= D</span><br><span class="line">\end&#123;CD&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><p>输出结果为：</p><p><img src="https://z.yxblog.dynv6.net/file/158a0c3fa586f4288dad3.png"></p><h4 id="typora-画流程图、时序图-顺序图-、甘特图"><a href="#typora-画流程图、时序图-顺序图-、甘特图" class="headerlink" title="typora 画流程图、时序图(顺序图)、甘特图"></a>typora 画流程图、时序图(顺序图)、甘特图</h4><p>(复制以下代码使用 typora 的源码模式粘贴到编辑器中查看效果)</p><p>以下几个实例效果图如下：</p><p><strong>1、横向流程图源码格式：</strong></p><pre><code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A[方形] --&gt;B(圆角)</span><br><span class="line">B --&gt; C&#123;条件a&#125;</span><br><span class="line">C --&gt;|a=1| D[结果1]</span><br><span class="line">C --&gt;|a=2| E[结果2]</span><br><span class="line">F[横向流程图]</span><br></pre></td></tr></table></figure></code></pre><p><strong>2、竖向流程图源码格式：</strong></p><pre><code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">graph TD</span><br><span class="line">A[方形] --&gt; B(圆角)</span><br><span class="line">B --&gt; C&#123;条件a&#125;</span><br><span class="line">C --&gt; |a=1| D[结果1]</span><br><span class="line">C --&gt; |a=2| E[结果2]</span><br><span class="line">F[竖向流程图]</span><br></pre></td></tr></table></figure></code></pre><p><strong>3、标准流程图源码格式：</strong></p><pre><code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: 开始框</span><br><span class="line">op=&gt;operation: 处理框</span><br><span class="line">cond=&gt;condition: 判断框(是或否?)</span><br><span class="line">sub1=&gt;subroutine: 子流程</span><br><span class="line">io=&gt;inputoutput: 输入输出框</span><br><span class="line">e=&gt;end: 结束框</span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;io-&gt;e</span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op</span><br></pre></td></tr></table></figure></code></pre><p><strong>4、标准流程图源码格式（横向）：</strong></p><pre><code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: 开始框</span><br><span class="line">op=&gt;operation: 处理框</span><br><span class="line">cond=&gt;condition: 判断框(是或否?)</span><br><span class="line">sub1=&gt;subroutine: 子流程</span><br><span class="line">io=&gt;inputoutput: 输入输出框</span><br><span class="line">e=&gt;end: 结束框</span><br><span class="line">st(right)-&gt;op(right)-&gt;cond</span><br><span class="line">cond(yes)-&gt;io(bottom)-&gt;e</span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op</span><br></pre></td></tr></table></figure></code></pre><p><strong>5、UML时序图源码样例：</strong></p><pre><code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">对象A-&gt;对象B: 对象B你好吗?（请求）</span><br><span class="line">Note right of 对象B: 对象B的描述</span><br><span class="line">Note left of 对象A: 对象A的描述(提示)</span><br><span class="line">对象B--&gt;对象A: 我很好(响应)</span><br><span class="line">对象A-&gt;对象B: 你真的好吗？</span><br></pre></td></tr></table></figure></code></pre><p><strong>6、UML时序图源码复杂样例：</strong></p><pre><code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Title: 标题：复杂使用</span><br><span class="line">对象A-&gt;对象B: 对象B你好吗?（请求）</span><br><span class="line">Note right of 对象B: 对象B的描述</span><br><span class="line">Note left of 对象A: 对象A的描述(提示)</span><br><span class="line">对象B--&gt;对象A: 我很好(响应)</span><br><span class="line">对象B-&gt;小三: 你好吗</span><br><span class="line">小三--&gt;&gt;对象A: 对象B找我了</span><br><span class="line">对象A-&gt;对象B: 你真的好吗？</span><br><span class="line">Note over 小三,对象B: 我们是朋友</span><br><span class="line">participant C</span><br><span class="line">Note right of C: 没人陪我玩</span><br></pre></td></tr></table></figure></code></pre><p><strong>7、UML标准时序图样例：</strong></p><pre><code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">%% 时序图例子,-&gt; 直线，--&gt;虚线，-&gt;&gt;实线箭头</span><br><span class="line">sequenceDiagram</span><br><span class="line">participant 张三</span><br><span class="line">participant 李四</span><br><span class="line">张三-&gt;王五: 王五你好吗？</span><br><span class="line">loop 健康检查</span><br><span class="line">    王五-&gt;王五: 与疾病战斗</span><br><span class="line">end</span><br><span class="line">Note right of 王五: 合理 食物 &lt;br/&gt;看医生...</span><br><span class="line">李四--&gt;&gt;张三: 很好!</span><br><span class="line">王五-&gt;李四: 你怎么样?</span><br><span class="line">李四--&gt;王五: 很好!</span><br></pre></td></tr></table></figure></code></pre><p><strong>8、甘特图样例：</strong></p><pre><code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">%% 语法示例</span><br><span class="line">    gantt</span><br><span class="line">    dateFormat  YYYY-MM-DD</span><br><span class="line">    title 软件开发甘特图</span><br><span class="line">    section 设计</span><br><span class="line">    需求                      :done,    des1, 2014-01-06,2014-01-08</span><br><span class="line">    原型                      :active,  des2, 2014-01-09, 3d</span><br><span class="line">    UI设计                     :         des3, after des2, 5d</span><br><span class="line">未来任务                     :         des4, after des3, 5d</span><br><span class="line">    section 开发</span><br><span class="line">    学习准备理解需求                      :crit, done, 2014-01-06,24h</span><br><span class="line">    设计框架                             :crit, done, after des2, 2d</span><br><span class="line">    开发                                 :crit, active, 3d</span><br><span class="line">    未来任务                              :crit, 5d</span><br><span class="line">    耍                                   :2d</span><br><span class="line">    section 测试</span><br><span class="line">    功能测试                              :active, a1, after des3, 3d</span><br><span class="line">    压力测试                               :after a1  , 20h</span><br><span class="line">    测试报告                               : 48h</span><br></pre></td></tr></table></figure></code></pre><p>上述所有流程图效果实例：<br><img src="https://z.yxblog.dynv6.net/file/60064b50424ee40e86370.png"></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> Markdown语法 </tag>
            
            <tag> Markdown </tag>
            
            <tag> 学习笔记 </tag>
            
            <tag> 编辑格式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>油猴插件的安装与使用</title>
      <link href="/2023/07/14/%E6%B2%B9%E7%8C%B4%E6%8F%92%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/07/14/%E6%B2%B9%E7%8C%B4%E6%8F%92%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<!-- <div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style> --><h1 id="不同浏览器中油猴插件的安装与使用"><a href="#不同浏览器中油猴插件的安装与使用" class="headerlink" title="不同浏览器中油猴插件的安装与使用"></a>不同浏览器中油猴插件的安装与使用</h1><p><a href="https://www.tampermonkey.net/">Tampermonkey</a>（油猴）是一款免费的浏览器扩展和最为流行的用户脚本管理器，它适用于 Chrome, Microsoft Edge, Safari, Opera Next, 和 Firefox。<br>虽然有些受支持的浏览器拥有原生的用户脚本支持，但 Tampermonkey 将在您的用户脚本管理方面提供更多的便利。 它提供了诸如便捷脚本安装、自动更新检查、标签中的脚本运行状况速览、内置的编辑器等众多功能， 同时Tampermonkey还有可能正常运行原本并不兼容的脚本。</p><h2 id="一、了解油猴"><a href="#一、了解油猴" class="headerlink" title="一、了解油猴"></a>一、了解油猴</h2><h3 id="（一）基本介绍"><a href="#（一）基本介绍" class="headerlink" title="（一）基本介绍"></a>（一）基本介绍</h3><ol><li><p>英文名: <em>Tampermonkey</em></p></li><li><p>定义:可以自定义脚本的<strong>浏览器插件</strong>，也叫<strong>脚本管理器</strong>。</p></li><li><p>作用:用于拓展浏览器中的功能，使用户能够在浏览器中自由的开发或添加自己需要的功能。</p></li></ol><h3 id="（二）使用范围"><a href="#（二）使用范围" class="headerlink" title="（二）使用范围"></a>（二）使用范围</h3><p>需要搭配浏览器使用，同时还需要脚本的支撑。即“<strong>浏览器+脚本</strong>”，这是两个必不可少的因素，相关信息可参考下方↓</p><ol><li>常见的浏览器</li></ol><table><thead><tr><th>国内</th><th>国外</th></tr></thead><tbody><tr><td>QQ浏览器</td><td>Microsoft Edge</td></tr><tr><td>搜狗浏览器</td><td>Chrome（谷歌）</td></tr><tr><td>360浏览器</td><td>Firefox（火狐）</td></tr></tbody></table><ol start="2"><li>脚本的来源</li></ol><table><thead><tr><th>国内</th><th>国外</th></tr></thead><tbody><tr><td><a href="https://greasyfork.org/zh-CN">Greasy Fork</a></td><td>OpenUserJS</td></tr><tr><td>油猴中文网</td><td>UserscriPt.Zone</td></tr></tbody></table><p>【<strong>总结</strong>】通俗的说:浏览器就好像自家才通了水电气的厨房，只能通过水电气与外界相连。而油猴就是其中的一口锅，通过这口锅，你可以自由的烹饪食材，做出一-道自己喜欢的美食，也可以烹饪从外面获得的现成的美食，直接享用。</p><p><strong>注：</strong><br><em>脚本:可以实现- -定功能的代码或程序</em><br><em>插件:不同浏览器中有不同的称呼，如扩展、应用、程序等</em></p><hr><h2 id="二、油猴插件的安装"><a href="#二、油猴插件的安装" class="headerlink" title="二、油猴插件的安装"></a>二、油猴插件的安装</h2><h3 id="（一）选择浏览器"><a href="#（一）选择浏览器" class="headerlink" title="（一）选择浏览器"></a>（一）选择浏览器</h3><p>选择一款你喜欢的浏览器，可参考上方的“常见的浏览器”进行选择。本文为了方便起见，以MicrosoftEdge_浏览器为例进行演示</p><h3 id="（二）安装油猴插件"><a href="#（二）安装油猴插件" class="headerlink" title="（二）安装油猴插件"></a>（二）安装油猴插件</h3><ol><li>双击打开Microsoft Edge 浏览器</li></ol><p><img src="https://z.yxblog.dynv6.net/file/82aacb8563cd83b36768b.png"></p><ol start="2"><li>点击浏览器界面右上角“…” 样式的图标</li></ol><p><img src="https://z.yxblog.dynv6.net/file/ba0e76453122396bf3c0b.png"></p><ol start="3"><li>点击“<strong>扩展</strong>”</li></ol><p><img src="https://z.yxblog.dynv6.net/file/75123fd809831b8cd6abe.png"></p><ol start="4"><li>右上角弹窗点击“<strong>打开Microsoft Edge外接程序网站</strong>”</li></ol><p><img src="https://z.yxblog.dynv6.net/file/88bcb721f994858d82121.png"></p><ol start="5"><li>在搜索框中输入并搜索“<strong>Tampermonkey</strong>”（按Enter键）</li></ol><p><img src="https://z.yxblog.dynv6.net/file/473ffe45fa567e5566ee9.png"></p><ol start="6"><li>找到“Tempermonkey”，并点击<strong>获取</strong></li></ol><p><img src="https://z.yxblog.dynv6.net/file/9c1015778964a5752cca1.png"></p><ol start="7"><li>点击“<strong>添加扩展</strong>”</li></ol><p><img src="https://z.yxblog.dynv6.net/file/58c369fdbd929ae378e0a.png"></p><ol start="8"><li>自动下载（若迟迟未下载或下载卡顿，请<strong>检查网络</strong>）</li></ol><p><img src="https://z.yxblog.dynv6.net/file/c9d762afc1daaab44a606.png"></p><ol start="9"><li>安装成功</li></ol><p><img src="https://z.yxblog.dynv6.net/file/c9c8fde532f92015152e5.png"></p><hr><h2 id="三、管理油猴"><a href="#三、管理油猴" class="headerlink" title="三、管理油猴"></a>三、管理油猴</h2><h3 id="（一）设置油猴插件在浏览器工具栏中显示"><a href="#（一）设置油猴插件在浏览器工具栏中显示" class="headerlink" title="（一）设置油猴插件在浏览器工具栏中显示"></a>（一）设置油猴插件在浏览器工具栏中显示</h3><ol><li>重复安装油猴(一)中的步骤①-③，在右上角弹出对话框中点击Tampermonkey对应的“<strong>小眼睛</strong>”，以取消隐藏</li></ol><p><img src="https://z.yxblog.dynv6.net/file/694be93424e7face7d6db.png"></p><ol start="2"><li>当出现如图所示的图标时，表示取消隐藏成功</li></ol><p><img src="https://z.yxblog.dynv6.net/file/6fa854812cea4a1c5670d.png"></p><h3 id="二-管理或删除油猴插件"><a href="#二-管理或删除油猴插件" class="headerlink" title="(二)管理或删除油猴插件"></a>(二)管理或删除油猴插件</h3><ol><li>重复管理油猴(一)中的步骤①-②，并在弹出对话框中点击“<strong>管理扩展</strong>”</li></ol><p><img src="https://z.yxblog.dynv6.net/file/e3d73db6b10a701a13ef5.png"></p><ol start="2"><li>在以下界面，你可以对油猴插件进行管理。(<strong>开启、关闭或删除</strong>)</li></ol><p><img src="https://z.yxblog.dynv6.net/file/27e93786a3fa4aa69391d.png"></p><h3 id="（三）油猴插件的控制面板"><a href="#（三）油猴插件的控制面板" class="headerlink" title="（三）油猴插件的控制面板"></a>（三）油猴插件的控制面板</h3><ol><li>回到浏览器主页，在上文的基础上，点击右上角<strong>油猴插件的图标</strong></li></ol><p><img src="https://z.yxblog.dynv6.net/file/07d35d1cff882f0a04103.png"></p><ol start="2"><li>点击“<strong>管理面板</strong>”</li></ol><p><img src="https://z.yxblog.dynv6.net/file/9354845ee3f9d3a361cc6.png"></p><ol start="3"><li>在此处管理所安装的脚本</li></ol><hr><h2 id="四、使用油猴"><a href="#四、使用油猴" class="headerlink" title="四、使用油猴"></a>四、使用油猴</h2><h3 id="一-使用说明"><a href="#一-使用说明" class="headerlink" title="(一)使用说明"></a>(一)使用说明</h3><p>油猴插件的使用需要搭配不同的脚本才能在浏览器中发挥相应的功能，上文已经提到，你可以自己编写脚本(本文暂不讨论)，也可以使用网络上现成的脚本。</p><p>若要使用网络上现成的脚本，可以参考前面所提到的<a href="https://greasyfork.org/zh-CN">Greasy Fork</a>网站，那里有许多功能齐全的脚本，你可以根据自己的需求选择自己需要的脚本,并将它们下载安装到油猴插件中进行运行。</p><h3 id="二-安装脚本"><a href="#二-安装脚本" class="headerlink" title="(二)安装脚本"></a>(二)安装脚本</h3><ol><li>百度搜索<a href="https://greasyfork.org/zh-CN">Greasy Fork</a>并打开</li></ol><p><img src="https://z.yxblog.dynv6.net/file/00c29ee8c3ba0c3dd3d39.png"></p><ol start="2"><li>搜索你想要的脚本(<strong>想要在此浏览器中实现什么功能</strong>)</li></ol><p><img src="https://z.yxblog.dynv6.net/file/59a7ace58cfdf3c5ce773.png"></p><p><strong>注</strong>：<br><em>Greasy Fork 网站:你可以直接在百度中搜索，并找到它们的官方网站。</em></p><ol start="3"><li><p>选择一个喜欢的脚本并点击<strong>安装此脚本</strong>，之后请耐心等待至“<strong>安装</strong>”界面的出现</p></li><li><p>点击“<strong>安装</strong>”，安装成功后会自动跳回本步骤第一个流程</p></li></ol><h3 id="（三）测试脚本功能"><a href="#（三）测试脚本功能" class="headerlink" title="（三）测试脚本功能"></a>（三）测试脚本功能</h3><p>根据安装脚本的说明及需要自行测试即可</p><h3 id="（四）脚本的管理"><a href="#（四）脚本的管理" class="headerlink" title="（四）脚本的管理"></a>（四）脚本的管理</h3><p>进入油猴控制界面对脚本进行控制</p><p><img src="https://z.yxblog.dynv6.net/file/2dd6c9c0de42ad209860e.png"></p><hr><h2 id="五、关于"><a href="#五、关于" class="headerlink" title="五、关于"></a>五、关于</h2><p>本文旨在介绍油猴的安装与使用，因不同工具和脚本的功能各异，难以一一列出，若有不妥之处，请多多包涵。同时，文中所涉及的教程仅供参考，其具体情况还需要读者自行根据需求进行变通。最后，感谢各位读者的支持!</p><hr><h2 id="六、参考资料"><a href="#六、参考资料" class="headerlink" title="六、参考资料"></a>六、参考资料</h2><ol><li><a href="https://www.tampermonkey.net/">Tampermonkey</a></li><li><a href="https://greasyfork.org/zh-CN">Greasy Fork</a></li><li><a href="https://blog.csdn.net/qq_42951560/article/details/109233301">油猴（Tampermonkey）安装教程</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> 浏览器 </tag>
            
            <tag> 脚本 </tag>
            
            <tag> 插件 </tag>
            
            <tag> 扩展 </tag>
            
            <tag> 效率 </tag>
            
            <tag> Greasy Fork </tag>
            
            <tag> Tampermonkey </tag>
            
            <tag> Microsoft Edge </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
